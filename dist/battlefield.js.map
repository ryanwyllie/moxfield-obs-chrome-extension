{"version":3,"file":"battlefield.js","mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://moxfield-obs-chrome-extension/./src/ports.ts","webpack://moxfield-obs-chrome-extension/webpack/bootstrap","webpack://moxfield-obs-chrome-extension/./src/battlefield.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BATTLEFIELD_WINDOW_PORT_NAME = void 0;\nexports.BATTLEFIELD_WINDOW_PORT_NAME = 'obs-window';\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ports_1 = require(\"./ports\");\nasync function init() {\n    const paramsString = window.location.search;\n    const searchParams = new URLSearchParams(paramsString);\n    const tabParam = searchParams.get('tabId');\n    const moxfieldTabId = tabParam && parseInt(tabParam, 10);\n    if (!moxfieldTabId) {\n        return;\n    }\n    // Connect to background script\n    const port = chrome.tabs.connect(moxfieldTabId, { name: ports_1.BATTLEFIELD_WINDOW_PORT_NAME });\n    // Listen for battlefield updates from background script\n    port.onMessage.addListener((message) => {\n        switch (message.type) {\n            case 'BATTLEFIELD_STYLES':\n                return handledStyles(message);\n            case 'BATTLEFIELD_CARD_SIZE':\n                return handleCardSize(message);\n            case 'BATTLEFIELD_UPDATE':\n                return handleUpdate(message);\n            default:\n                throw new Error('Unknown message');\n        }\n    });\n}\ninit();\nfunction handledStyles(message) {\n    message.hrefs.forEach(href => {\n        const linkElement = document.createElement('link');\n        linkElement.rel = 'stylesheet';\n        linkElement.type = 'text/css';\n        linkElement.href = href;\n        document.head.append(linkElement);\n    });\n}\nfunction handleCardSize({ height, width }) {\n    document.body.style.setProperty('--card-height', `${height}px`);\n    document.body.style.setProperty('--card-width', `${width}px`);\n}\nfunction handleUpdate(message) {\n    document.body.innerHTML = message.content;\n    const battlefieldDropdown = document.body.querySelector('.battlefield > .dropdown');\n    if (battlefieldDropdown && battlefieldDropdown.textContent?.toLowerCase().includes('battlefield')) {\n        battlefieldDropdown.remove();\n    }\n}\n"],"names":[],"sourceRoot":""}